generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SenlerGroup {
  id                              String   @id @default(uuid())
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime @updatedAt

  amoCrmDomainName                String   @unique

  amoCrmAccessToken               String   @unique
  amoCrmRefreshToken              String   @unique

  senlerGroupId                   String   @unique
  senlerAccessToken               String   @unique
  senlerSign                      String   @unique @default(dbgenerated("substring(gen_random_uuid()::text from 1 for 32)"))

  leads                           Lead[]
  senlerIntegrationStepsTemplates SenlerIntegrationStepTemplate[]
}

model SenlerIntegrationStepTemplate {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  settings    Json

  senlerGroup SenlerGroup @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model Lead {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  amoCrmLeadId  Int

  senlerLeadId  String @unique

  senlerGroupId String
  senlerGroup   SenlerGroup @relation(fields: [senlerGroupId], references: [id], onDelete: Cascade)

  @@unique([senlerLeadId, senlerGroupId])
}
